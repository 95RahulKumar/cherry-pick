git cat-file hashcode -p
  will give the details about 
commits 


commands for renaming the file name  in windows
mv filename want to rename new file name 


head will always point to the latest commit of  

we know that if you want to move the branch we use following commands

1. commit
2. merge
3. rebase

on observation we can say that these commands are not used for moving the branch
branch will be mooves becouse of side effect of commit 
but we have reset command which will moove the branch

Reset has options 
--hard - mooves the  file both working area and staging area 
--mixed -  mooves the file only to stage area 
--soft - does not mooves the file 

so finally we can say that reset mooves the current branch 
from one commit to onather commit

git reset is used if you want to undow the changes  


*** learnig cherry-pick in git 
*** learnig cherry-pick in git 
*committing in feature branch"
* git practice for head detach****
* git reset commit id --> it will just moove the branch do not change the file 
internally 
** git reset commit id  --hard flag mooves the branch as well as it removes the
the content means it makes the file like prevous in local repo

** git reset head --> mooves the file from statging to working area 
** git reset head --hard  --> mooves the file from statging to working area 
as well as removes the content of files it makes working area as it was previously

git reset command also removes the commit msg

**********Git Stash******************
The real use case for the git stash is if you have changes in the current branch and you want to switch branches, but you don't want toÂ 
commit your changes. because of the middle of the development
then git stashing comes into picture.
stash means --> store something safely in hidden place ie git temporarely saves your changes without commiting it in current branch
***common command for GIT stashing***
git statsh
git stash list -- popuplate all stashed changes ( in satsh list always latest 
stash will be on top )
git stash save "custom name for stash" -- to create stash with custom name
git stash --  create a stash with "WIP in <branch name>"
git stash pop -- remove the recent stash from list and apply current branch
git stash apply -- same as pop but do not removes from stash list
git stash apply stash@{id} -- will apply specific stash in current branch
git stash drop stash@{id} -- will delete specific stash from the list
git stash clear -- clear all stash from the list

hello for stash
